Thm boolTest : [ (x : bool) -> bool true ] by [
  lam x {
    if x then { 'tt } else { 'ff }
  };

  auto
].

Thm pathTest : [ paths({x}. S1; base; base) true ] by [
  <x> {
    'loop{x}
  };

  auto
].


Thm funElimTest : [ (f : (x : bool) -> bool) -> bool true ] by [
  lam f {
    let x = f {'tt} in {
      hyp{x}
    }
  };

  auto
].

Thm s1ElimTest : [ (s : S1) -> S1 true ] by [
  lam s {
    case s of
       base => {'base}
     | loop{x} => {'loop{x}}
  };

  auto
].

// Useful for stepping through a proof RedPRL completes automatically, to see
// what is being done.
Tac tryStep = [ auto-step || id ].

Thm apEqTest : [
  (f : (x : bool) -> bool)
    -> paths({y}. bool; f tt; f tt) true
] by [
  lam f {
    <y> {
      '(,f tt)
    }
  };

  // Try commenting out the following line, and stepping through the proof with tryStep().
  auto
].
