Thm MyLemma : [ x : bool true >> bool true ] by [
  {if x then 'ff else 'tt};
  auto
].

Rule MyRule : [
  {x : bool true >> ff in bool},
  {x : bool true >> tt in bool}
  ==> {x : bool true >> bool true}
] by [
  {if x then 'ff else 'tt}
].


Thm MyCorollary : [ bool -> bool true ] by [
  { lam z. lemma MyRule{z}
  }; auto
].

Extract MyCorollary.

Thm MyCorollary/Test : [ MyCorollary = lam([z]. if([_]. bool; z; ff; tt)) in bool -> bool ] by [
  auto
].