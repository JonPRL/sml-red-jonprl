Thm Univ0 {i:lvl, j:lvl} : [
  (univ i cubical) type at {lsucc {lmax i j}}
] by [
  auto
].

Thm Univ1 {i:lvl} : [
  nat in (univ i discrete)
] by [
  auto
].

Thm Univ2 : [
  x : (univ 2)
  >>
  x type at 2
] by [
  fresh y -> elim x; use y
].

  fresh ob ->
Thm Monoid{i:lvl}  : [ (univ {lsucc i}) ] by [
  `(record
    [ob : (univ i)]
    [one : ob]
    [mul : (-> ob ob ob)]
    [idn/l : (-> [m : ob] (= ob ($ mul one m) m))]
    [idn/r : (-> [m : ob] (= ob ($ mul m one) m))]
    [assoc : (-> [l m n : ob] (path {_} ob ($ mul l ($ mul m n)) ($ mul ($ mul m n) l)))]);
  elim ob;
  auto
].

Print Monoid.
