theorem Univ0(#i:lvl, #j:lvl) :
  (U #i) in (U (++ (lmax #i #j)))
by
  auto
.

theorem Univ1(#i:lvl) :
  nat in (U #i discrete)
by
  auto
.

theorem Univ2 :
  (->
   [a : (U 0 discrete)]
   (= (U 1 kan) a a))
by
  lam a => auto
.

theorem Monoid(#i:lvl) : (U (++ #i))  by
  `(record
    [ob : (U #i)]
    [one : ob]
    [mul : (-> ob ob ob)]
    [idn/l : (-> [m : ob] (= ob ($ mul one m) m))]
    [idn/r : (-> [m : ob] (= ob ($ mul m one) m))]
    [assoc :
     (->
      [l m n : ob]
      (= ob
         ($ mul l ($ mul m n))
         ($ mul ($ mul m n) l)))])
.

print Monoid.
