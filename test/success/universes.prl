Thm Univ0(#i:lvl; #j:lvl) : [
  (U #i) type at (lsucc (lmax #i #j))
] by [
  auto
].

Thm Univ1(#i:lvl) : [
  nat in (U #i discrete)
] by [
  auto
].

Thm Univ2 : [
  x : (U (lvl 2))
  >>
  x type at (lvl 2)
] by [
  auto
].

Thm Monoid(#i:lvl) : [ (U (lsucc #i)) ] by [
  `(record
    [ob : (U #i)]
    [one : ob]
    [mul : (-> ob ob ob)]
    [idn/l : (-> [m : ob] (= ob ($ mul one m) m))]
    [idn/r : (-> [m : ob] (= ob ($ mul m one) m))]
    [assoc :
     (->
      [l m n : ob]
      (= ob
         ($ mul l ($ mul m n))
         ($ mul ($ mul m n) l)))])
].

Print Monoid.
