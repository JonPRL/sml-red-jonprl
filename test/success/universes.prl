Thm Univ0(#i:lvl, #j:lvl) at (+ (lmax #i #j) 2) : [
  (mem (U (++ (lmax #i #j))) (U #i))
] by [
  auto
].

Thm Univ1(#i:lvl) at (++ #i) : [
  (mem (U #i discrete) nat)
] by [
  auto
].
Thm Monoid(#i:lvl) at (+ #i 2) : [ (U (++ #i)) ] by [
  `(record
    [ob : (U #i)]
    [one : ob]
    [mul : (-> ob ob ob)]
    [idn/l : (-> [m : ob] (= ob ($ mul one m) m))]
    [idn/r : (-> [m : ob] (= ob ($ mul m one) m))]
    [assoc :
     (->
      [l m n : ob]
      (= ob
         ($ mul l ($ mul m n))
         ($ mul ($ mul m n) l)))])
].

Print Monoid.
