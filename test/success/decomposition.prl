Thm Decomposition : [
  (->
   (record [foo : (record [a : bool] [b : (* bool bool)])] [bar : S1])
   bool)
] by [
  lam <foo = <a, b = <proj1>>>.
  hyp proj1
].

Extract Decomposition.

Thm Apply : [
  (-> 
   (->
    bool
    bool
    (path {_}
     (record [a : S1])
     (tuple [a base])
     (tuple [a base])))
   S1)
] by [
  lam f.
    let <a> = f `tt `ff @0.
    hyp a
].

Extract Apply.


Thm MyLemma(#m: [exp].exp) : [
  (-> [b : bool] [p : (path {_} bool b tt)] (path {_} bool tt b))
] by [
  lam b, p. <i> `(hcom{0~>1} bool ,b [i=0 {j} (@ ,p j)] [i=1 {_} ,b])
].

Thm UsingLemma : [
  (path {_} bool tt tt)
] by [
  fresh lem, x <- cut-lemma MyLemma;
  [`,x];

  let welp = lem `tt {<_> `tt}.
  hyp welp
].

Print UsingLemma.