Thm Decomposition : [
  (->
   (record [foo : (record [a : bool] [b : (* bool bool)])] [bar : S1])
   bool)
] by [
  lam {foo = {a = a, b = {welp}}}.
  use welp
].

Extract Decomposition.

Thm Apply : [
  (-> 
   (->
    bool
    bool
    (path {_}
     (record [a : S1])
     (tuple [a base])
     (tuple [a base])))
   S1)
] by [
  lam f.
    let {a = a} = f [`tt, `ff, @0].
    use a
].

Extract Apply.

Thm UseHypTest : [
  (-> bool bool)
] by [
  lam x.
  let p : [(-> bool S1 bool)] = lam b, c. use b.
  use p [use x, `(loop 0)]
].

Print UseHypTest.

Thm UseLemmaTest : [
  (-> bool bool)
] by [
  lam x.
  use UseHypTest [use x]
].


Thm MyLemma(#m: {dim,dim}[exp,exp].exp) : [
  (-> [b : bool] [p : (path {_} bool b tt)] (* bool (path {_} bool tt b)))
] by [
  lam b, p. {`tt, <i> `(hcom{0~>1} bool ,b [i=0 {j} (@ ,p j)] [i=1 {_} ,b])}
].

Thm UsingLemma : [
  (path {_} bool tt tt)
] by [
  let {_,lem} = (MyLemma {i j} [x y] (@ (abs {_} y) i)) [`tt, <_> `tt].
  use lem
].

Print UsingLemma.
