theorem Decomposition : 
  (->
   (record [rcd : (record [a : bool] [b : (* bool int)])] [circ : S1])
   bool)
by {
  lam x =>
    let {rcd = {a = a, b = {welp}}, circ = circ} = x;
    use welp
}.

print Decomposition.

theorem Apply : 
  (-> 
   (->
    bool
    bool
    (path [_]
     (record [a : S1])
     (tuple [a base])
     (tuple [a base])))
   S1)
by {
  lam f =>
    let {a = a} = f [`tt, `ff, `(dim 0)];
    use a
}.



print Apply.

theorem UseHypTest : 
  (-> bool bool)
by {
  lam x =>
  claim p : [(-> bool S1 bool)] by [lam b c => use b];
  use p [use x, `(loop 0)]
}.

print UseHypTest.

theorem UseLemmaTest : 
  (-> bool bool)
by {
  lam x =>
  use UseHypTest [use x]
}.
