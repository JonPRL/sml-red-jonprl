Thm Decomposition : [
  (->
   (record [foo : (record [a : bool] [b : (* bool bool)])] [bar : S1])
   bool)
] by [
  lam {foo = {a = a, b = {welp}}} =>
  use welp
].

Extract Decomposition.

Thm Apply : [
  (-> 
   (->
    bool
    bool
    (path [_]
     (record [a : S1])
     (tuple [a base])
     (tuple [a base])))
   S1)
] by [
  lam f =>
    let {a = a} = f [`tt, `ff, `(dim 0)] in
    use a
].

Extract Apply.

Thm UseHypTest : [
  (-> bool bool)
] by [
  lam x =>
  let p : [(-> bool S1 bool)] = {lam b, c => use b} in
  use p [use x, `(loop 0)]
].

Print UseHypTest.

Thm UseLemmaTest : [
  (-> bool bool)
] by [
  lam x =>
  use UseHypTest [use x]
].