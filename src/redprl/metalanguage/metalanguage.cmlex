name MetalanguageLexFn
alphabet 128

set digit = (range '0 '9)
set posdigit = (range '1 '9)
set id_start = (| '\ '/ '- (range 'a 'z 'A 'Z))
set id_cont = (| id_start digit '_ '')
set white = (| 32 9 10 13)  /* space, tab, lf, cr */
set notnewln = (~ 10)

regexp ident = (seq id_start (* id_cont))
regexp ws = (+ white)
regexp number = (| '0 (seq posdigit (* digit)))

function lexmain: t =
  eos => eof
  "fn" => fn_
  "let" => let_
  "in" => in_
  "end" => end_
  "#1" => proj1
  "#2" => proj2
  "print" => print
  "goal" => goal
  "prove" => prove
  "bool" => bool
  "tt" => tt
  "exact" => exact
  "refine" => refine
  ws => skip
  (seq '= '>) => double_right_arrow
  '[ => lsquare
  '] => rsquare
  '( => lparen
  ') => rparen
  ', => comma
  '= => equals
  '` => backtick
  ident => ident

  any => error
  epsilon => error
  